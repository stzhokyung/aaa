업무: 자사 모듈, 가위바위보 시스템 파악
파일:


SideUI Popup을 활성화하는 SideUI의 버튼부터 살펴보자

-SideHomeUI
SideHomeUI는 right, left 컨테이너에 
IHomeSideUI 인터페이스를 상속받는 OfferName 버튼 오브젝트의 클래스를 관리하는 클래스다.
여기서 사이드 UI를 세팅하고, 서버 상태에 따라 출력할 사이드 UI를 결정하고 한다.

-SideHomeUI::SetSideUI()
SetSideUI 메서드는 where를 IHomeSideUI 인터페이스르 상속받는 클래스만 일반화가 가능하게 하고,
인수 ref를 통해 원본 UI 게임오브젝트에 참조해서 값을 변경할 수 있게 했다.

-ObserverManager
ObserverManager는 서버에서 Update되는 Side UI나 Stage Info 등 업데이트 데이터를 저장하고
옵저버 패턴을 통해 브릿지 역할을 하는 매니저다.

-OfferSRP::OnNewSecond()
나중에 OffserSRP 버튼이 생성될때는 OnNewSecond() 메서드가 실행되는데,
Side UI를 list로 갖고있는 ObserverManager를 통해 접근한 다음에, SideHomeUI에 들어가 
인자로 받은 해쉬테이블의 벨류를 통해 생성할 버튼 UI를 설정하고, SetSideUI 메서드를 통해 생성하게 된다.

-SRPHelper
event_id를 통해 Event의 활성화여부를 게임서버로부터 불러오고, 뿌려주는 클래스
(event_id는 static에 event_reward에 값이랑 동일)
ObserverManger를 통해 SideHomeUI의 ReceiveEvent(SideHomeUI 생성함수를 실행시키는 분기용 함수임)에서
보여줘도 될지 말지, 생성할지 말지를 Helper의 데이터값의 존재 유무에 따라 같이 결정함.
로얄, 팸, 탑리그 등 이벤트에 관한 데이터를 연결해주는 Helper 클래스가 각각 따로 존재함.

-OffserSRP::Aweake()
특별한건없다. Button 눌렀을 때, PopupManager에 PopupSRP가 없을 것이고, 
Show를 하면서 자연스럽게 PopupManager를 통해 생성하고 List에 등록한다.

-StzUIAutoMapperSetting
해당 클래스를 통해 에디터에서 Popup과 Ui Script를 생성할 수 있다.


-PopupSRP
Animation은 코드로 제어함. 파라미터와 컨디션을 통해 제어하진 않는듯.
IObserver과 IObservable은 unirx의 인터페이스.
Observer은 관찰자. IObservable은 관찰가능한 관찰대상
Observable 객체를 사용한다는 것은 스트림에 흘려 보내는 값, 즉 각종 이벤트 들의 관찰을 한다는 것.


-tip
namespace 







